<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic Tac Toe</title>
    <style>
        body {
            text-align: center;
            font-family: Arial, sans-serif;
        }
        .board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 5px;
            justify-content: center;
            margin: 20px auto;
        }
        .cell {
            width: 100px;
            height: 100px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2em;
            background: lightgray;
            cursor: pointer;
        }
        .cell:hover {
            background: gray;
        }
        .cell.taken {
            cursor: not-allowed;
        }
        .message {
            font-size: 1.5em;
            margin: 10px;
        }
        button {
            padding: 10px 20px;
            font-size: 1em;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>Tic Tac Toe</h1>
    <div class="message" id="message">Player X's turn</div>
    <div class="board" id="board"></div>
    <button onclick="resetGame()">Reset Game</button>
    <script>
        let board = ['', '', '', '', '', '', '', '', ''];
        let currentPlayer = 'X';
        let gameActive = true;
        
        function createBoard() {
            const boardElement = document.getElementById('board');
            boardElement.innerHTML = '';
            board.forEach((cell, index) => {
                const cellElement = document.createElement('div');
                cellElement.classList.add('cell');
                cellElement.textContent = cell;
                cellElement.addEventListener('click', () => handleMove(index));
                boardElement.appendChild(cellElement);
            });
        }
        
        function handleMove(index) {
            if (board[index] !== '' || !gameActive) return;
            
            board[index] = currentPlayer;
            createBoard();
            if (checkWinner()) {
                document.getElementById('message').textContent = `Player ${currentPlayer} wins!`;
                gameActive = false;
                return;
            }
            if (!board.includes('')) {
                document.getElementById('message').textContent = "It's a draw!";
                gameActive = false;
                return;
            }
            
            currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
            document.getElementById('message').textContent = `Player ${currentPlayer}'s turn`;
        }
        
        function checkWinner() {
            const winPatterns = [
                [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows
                [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns
                [0, 4, 8], [2, 4, 6] // Diagonals
            ];
            
            return winPatterns.some(pattern => {
                const [a, b, c] = pattern;
                return board[a] && board[a] === board[b] && board[a] === board[c];
            });
        }
        
        function resetGame() {
            board = ['', '', '', '', '', '', '', '', ''];
            currentPlayer = 'X';
            gameActive = true;
            document.getElementById('message').textContent = "Player X's turn";
            createBoard();
        }
        
        createBoard();
    </script>
</body>
</html>
